<?php

class manifest_m extends CI_Model {

    function __construct() {
        parent::__construct();
    }

    function get_data_delivery_delay_and_partial() {

        return $this->db->query("SELECT RTRIM(SH.CHR_CUST_NO) CHR_CUST_NO, RTRIM(SH.CHR_PO_NO) CHR_PO_NO, RTRIM(SH.CHR_SM_NO) CHR_SM_NO, SH.CHR_DOCK_NO, SH.INT_CYCLE, SH.CHR_DELIVERY_DATE, 
        CAST(REPLACE(SH.INT_PLAN_TOTAL_KANBAN,'.000','') AS INT) INT_PLAN_TOTAL_KANBAN, 
        CAST(REPLACE(SH.INT_PLAN_TOTAL_QTY,'.000','') AS INT) INT_PLAN_TOTAL_QTY, 
        CAST(REPLACE(SH.INT_DEL_TOTAL_KANBAN,'.000','') AS INT) INT_DEL_TOTAL_KANBAN, 
        CAST(REPLACE(SH.INT_DEL_TOTAL_QTY,'.000','') AS INT) INT_DEL_TOTAL_QTY, 
        CAST(REPLACE(SH.INT_TOTAL_DO,'.000','') AS INT) INT_TOTAL_DO,  
        CAST(REPLACE(SH.INT_TOTAL_DO_RECEIVE ,'.000','') AS INT) INT_TOTAL_DO_RECEIVE, 
        CASE WHEN CAST(REPLACE(SH.INT_DEL_TOTAL_QTY,'.000','') AS INT) <> 0 AND CAST(REPLACE(SH.INT_DEL_TOTAL_QTY,'.000','') AS INT) < CAST(REPLACE(SH.INT_PLAN_TOTAL_QTY,'.000','') AS INT) THEN 'PARTIAL DELIVERY'
             WHEN CAST(REPLACE(SH.INT_DEL_TOTAL_QTY,'.000','') AS INT) = 0 AND SH.CHR_DELIVERY_DATE < (CONVERT([char](10),getdate(),(112))) THEN 'DELAYED DELIVERY'
        ELSE '-' END AS REMARK 
        FROM TM_SMANIFEST_HEADER SH 
        INNER JOIN TM_SMANIFEST_ITEM SI ON SI.CHR_CUST_NO = SH.CHR_CUST_NO AND SH.CHR_PO_NO = SI.CHR_PO_NO AND SI.CHR_SM_NO = SH.CHR_SM_NO
        WHERE ((CAST(REPLACE(SH.INT_DEL_TOTAL_QTY,'.000','') AS INT) <> 0 
        AND CAST(REPLACE(SH.INT_DEL_TOTAL_QTY,'.000','') AS INT) < CAST(REPLACE(SH.INT_PLAN_TOTAL_QTY,'.000','') AS INT)
        AND   (CHR_STAT_CLOSE IS NULL))
        OR 
        (CAST(REPLACE(SH.INT_DEL_TOTAL_QTY,'.000','') AS INT) = 0 
        AND SH.CHR_DELIVERY_DATE < (CONVERT([char](10),getdate(),(112))))
         AND   (CHR_STAT_CLOSE IS NULL))
        GROUP BY 
        SH.CHR_CUST_NO, SH.CHR_PO_NO, SH.CHR_SM_NO, SH.CHR_DOCK_NO, SH.INT_CYCLE, SH.CHR_DELIVERY_DATE, 
        CAST(REPLACE(SH.INT_PLAN_TOTAL_KANBAN,'.000','') AS INT), 
        CAST(REPLACE(SH.INT_PLAN_TOTAL_QTY,'.000','') AS INT), 
        CAST(REPLACE(SH.INT_DEL_TOTAL_KANBAN,'.000','') AS INT), 
        CAST(REPLACE(SH.INT_DEL_TOTAL_QTY,'.000','') AS INT), 
        CAST(REPLACE(SH.INT_TOTAL_DO,'.000','') AS INT),  
        CAST(REPLACE(SH.INT_TOTAL_DO_RECEIVE ,'.000','') AS INT), 
        CASE WHEN CAST(REPLACE(SH.INT_DEL_TOTAL_QTY,'.000','') AS INT) <> 0 AND CAST(REPLACE(SH.INT_DEL_TOTAL_QTY,'.000','') AS INT) < CAST(REPLACE(SH.INT_PLAN_TOTAL_QTY,'.000','') AS INT) THEN 'PARTIAL DELIVERY'
             WHEN CAST(REPLACE(SH.INT_DEL_TOTAL_QTY,'.000','') AS INT) = 0 AND SH.CHR_DELIVERY_DATE < (CONVERT([char](10),getdate(),(112))) THEN 'DELAYED DELIVERY'
        ELSE '-' END 
        order by SH.CHR_DELIVERY_DATE
")->result();
    }

    function get_data_delivery_delay_and_partial_detail() {
        return $this->db->query("SELECT RTRIM(SH.CHR_CUST_NO) CHR_CUST_NO, RTRIM(SH.CHR_PO_NO) CHR_PO_NO, RTRIM(SH.CHR_SM_NO) CHR_SM_NO, SH.CHR_DOCK_NO, SH.INT_CYCLE, SH.CHR_DELIVERY_DATE, 
        CAST(REPLACE(SH.INT_PLAN_TOTAL_KANBAN,'.000','') AS INT) INT_PLAN_TOTAL_KANBAN, 
        CAST(REPLACE(SH.INT_PLAN_TOTAL_QTY,'.000','') AS INT) INT_PLAN_TOTAL_QTY, 
        CAST(REPLACE(SH.INT_DEL_TOTAL_KANBAN,'.000','') AS INT) INT_DEL_TOTAL_KANBAN, 
        CAST(REPLACE(SH.INT_DEL_TOTAL_QTY,'.000','') AS INT) INT_DEL_TOTAL_QTY, 
        CAST(REPLACE(SH.INT_TOTAL_DO,'.000','') AS INT) INT_TOTAL_DO,  
        CAST(REPLACE(SH.INT_TOTAL_DO_RECEIVE ,'.000','') AS INT) INT_TOTAL_DO_RECEIVE, 
        CASE WHEN CAST(REPLACE(SH.INT_DEL_TOTAL_QTY,'.000','') AS INT) <> 0 AND CAST(REPLACE(SH.INT_DEL_TOTAL_QTY,'.000','') AS INT) < CAST(REPLACE(SH.INT_PLAN_TOTAL_QTY,'.000','') AS INT) THEN 'PARTIAL DELIVERY'
             WHEN CAST(REPLACE(SH.INT_DEL_TOTAL_QTY,'.000','') AS INT) = 0 AND SH.CHR_DELIVERY_DATE < (CONVERT([char](10),getdate(),(112))) THEN 'DELAYED DELIVERY'
        ELSE '-' END AS REMARK ,
        SI.CHR_PART_NO , SI.CHR_PART_NO_CUST , 
        CAST(REPLACE(SI.INT_PLAN_KANBAN,'.000','') AS INT) INT_PLAN_TOTAL_KANBAN_DETAIL, 
        CAST(REPLACE(SI.INT_PLAN_QTY,'.000','') AS INT) INT_PLAN_TOTAL_QTY_DETAIL, 
        CAST(REPLACE(SI.INT_DEL_KANBAN,'.000','') AS INT) INT_DEL_TOTAL_KANBAN_DETAIL, 
        CAST(REPLACE(SI.INT_DEL_QTY,'.000','') AS INT) INT_DEL_TOTAL_QTY_DETAIL
        FROM TM_SMANIFEST_HEADER SH 
        INNER JOIN TM_SMANIFEST_ITEM SI ON SI.CHR_CUST_NO = SH.CHR_CUST_NO AND SH.CHR_PO_NO = SI.CHR_PO_NO AND SI.CHR_SM_NO = SH.CHR_SM_NO
        WHERE ((CAST(REPLACE(SH.INT_DEL_TOTAL_QTY,'.000','') AS INT) <> 0 
        AND CAST(REPLACE(SH.INT_DEL_TOTAL_QTY,'.000','') AS INT) < CAST(REPLACE(SH.INT_PLAN_TOTAL_QTY,'.000','') AS INT)
        AND   (CHR_STAT_CLOSE IS NULL))
        OR 
        (CAST(REPLACE(SH.INT_DEL_TOTAL_QTY,'.000','') AS INT) = 0 
        AND SH.CHR_DELIVERY_DATE < (CONVERT([char](10),getdate(),(112))))
         AND   (CHR_STAT_CLOSE IS NULL))
     
        order by SH.CHR_DELIVERY_DATE")->result();
    }

    function get_data_receive_delay_and_partial() {

        return $this->db->query("SELECT SH.CHR_CUST_NO, SH.CHR_PO_NO, SH.CHR_SM_NO, SH.CHR_DOCK_NO, SH.INT_CYCLE, SH.CHR_DELIVERY_DATE, 
        CAST(REPLACE(SH.INT_PLAN_TOTAL_KANBAN,'.000','') AS INT) INT_PLAN_TOTAL_KANBAN, 
        CAST(REPLACE(SH.INT_PLAN_TOTAL_QTY,'.000','') AS INT) INT_PLAN_TOTAL_QTY, 
        CAST(REPLACE(SH.INT_DEL_TOTAL_KANBAN,'.000','') AS INT) INT_DEL_TOTAL_KANBAN, 
        CAST(REPLACE(SH.INT_DEL_TOTAL_QTY,'.000','') AS INT) INT_DEL_TOTAL_QTY, 
        CAST(REPLACE(SH.INT_TOTAL_DO,'.000','') AS INT) INT_TOTAL_DO,  
        CAST(REPLACE(SH.INT_TOTAL_DO_RECEIVE ,'.000','') AS INT) INT_TOTAL_DO_RECEIVE, 
        CASE WHEN CAST(SH.INT_TOTAL_DO_RECEIVE AS INT) = 0 AND CAST(SH.INT_TOTAL_DO AS INT) > 0 
            AND SH.CHR_DELIVERY_DATE < CONVERT([varchar](10),DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), -2),(112)) THEN 'DELAY RECEIVE'
             WHEN CAST(INT_TOTAL_DO AS INT) > 0  
            AND CAST(INT_TOTAL_DO_RECEIVE AS INT) < CAST(INT_TOTAL_DO AS INT)
            AND CAST(INT_TOTAL_DO_RECEIVE AS INT) > 0
            AND SH.CHR_DELIVERY_DATE < CONVERT([varchar](10),DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), -2),(112)) THEN 'PARTIAL RECEIVE'
        ELSE '-' END AS REMARK 
        FROM TM_SMANIFEST_HEADER SH 
        INNER JOIN TM_SMANIFEST_ITEM SI ON SI.CHR_CUST_NO = SH.CHR_CUST_NO AND SH.CHR_PO_NO = SI.CHR_PO_NO AND SI.CHR_SM_NO = SH.CHR_SM_NO
        WHERE 
        (
            CAST(SH.INT_TOTAL_DO_RECEIVE AS INT) = 0 AND CAST(SH.INT_TOTAL_DO AS INT) > 0 
            AND SH.CHR_DELIVERY_DATE < CONVERT([varchar](10),DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), -2),(112))
            OR
            CAST(INT_TOTAL_DO AS INT) > 0  
            AND CAST(INT_TOTAL_DO_RECEIVE AS INT) < CAST(INT_TOTAL_DO AS INT)
            AND CAST(INT_TOTAL_DO_RECEIVE AS INT) > 0
            AND SH.CHR_DELIVERY_DATE < CONVERT([varchar](10),DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), -2),(112))
        )
        GROUP BY  
        SH.CHR_CUST_NO, SH.CHR_PO_NO, SH.CHR_SM_NO, SH.CHR_DOCK_NO, SH.INT_CYCLE, SH.CHR_DELIVERY_DATE, 
        CAST(REPLACE(SH.INT_PLAN_TOTAL_KANBAN,'.000','') AS INT), 
        CAST(REPLACE(SH.INT_PLAN_TOTAL_QTY,'.000','') AS INT), 
        CAST(REPLACE(SH.INT_DEL_TOTAL_KANBAN,'.000','') AS INT), 
        CAST(REPLACE(SH.INT_DEL_TOTAL_QTY,'.000','') AS INT), 
        CAST(REPLACE(SH.INT_TOTAL_DO,'.000','') AS INT),  
        CAST(REPLACE(SH.INT_TOTAL_DO_RECEIVE ,'.000','') AS INT), 
            CASE WHEN CAST(SH.INT_TOTAL_DO_RECEIVE AS INT) = 0 AND CAST(SH.INT_TOTAL_DO AS INT) > 0 
            AND SH.CHR_DELIVERY_DATE < CONVERT([varchar](10),DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), -2),(112)) THEN 'DELAY RECEIVE'
             WHEN CAST(INT_TOTAL_DO AS INT) > 0  
            AND CAST(INT_TOTAL_DO_RECEIVE AS INT) < CAST(INT_TOTAL_DO AS INT)
            AND CAST(INT_TOTAL_DO_RECEIVE AS INT) > 0
            AND SH.CHR_DELIVERY_DATE < CONVERT([varchar](10),DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), -2),(112)) THEN 'PARTIAL RECEIVE'
        ELSE '-' END")->result();
    }

    function get_data_manifest_by_sm($sm) {
        return $this->db->query("SELECT SI.* , ps.CHR_PART_NAME , ps.CHR_PART_NO_DASH FROM TM_SMANIFEST_ITEM as SI
join TM_PARTS PS
on SI.CHR_PART_NO = PS.CHR_PART_NO
WHERE CHR_SM_NO = '$sm'")->result();
    }

    function get_data_manifest_ng($sm) {
        return $this->db->query("SELECT SI.CHR_PART_NO_CUST FROM TM_SMANIFEST_ITEM as SI
WHERE CHR_SM_NO = '$sm' AND CAST(REPLACE(SI.INT_PLAN_QTY,'.000','') AS INT) <> CAST(REPLACE(SI.INT_DEL_QTY,'.000','') AS INT)")->result();
    }

    function update_detail_manifest($sm, $po, $pno_cust, $feedback) {
        $this->db->query("update TM_SMANIFEST_ITEM set CHR_FEEDBACK_CLOSE = '$feedback' where CHR_PO_NO = '$po' and CHR_SM_NO='$sm' and CHR_PART_NO_CUST='$pno_cust'");
    }

    function update_header_manifest($sm, $po) {
        $this->db->query("update TM_SMANIFEST_HEADER set CHR_STAT_CLOSE = '1' where CHR_PO_NO = '$po' and CHR_SM_NO='$sm'");
    }

}
?>

